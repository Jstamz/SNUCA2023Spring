#  1 long problem1(long i)
#  2 {
#  3   long result;
#  4 
#  5   if (i < 2) result = 1;
#  6   else result = problem1(i-1) + problem1(i-2);
#  7 
#  8   return result;
#  9 }


        .file   "p1.c"
        .text
        .align  2
        .globl  problem1
problem1:                               # entry of problem1
                                        # a0 = i
        li      a5,1                    # a5 = 1
        bgt     a0,a5,.L8               # if a0 >= a5 ? .goto .L8
                                        # match with if statement
        li      a0,1                    # setup return value
        ret                             # return function
.L8:                                    # 
        addi    sp,sp,-32               # set stack frame(8 * 3 + 8)
        sd      ra,24(sp)               # save return address(callee - saved)
        sd      s0,16(sp)               # save s0 (callee - saved)
        sd      s1,8(sp)                # save s1 (callee - saved)
        mv      s0,a0                   # s0 = a0
        addi    a0,a0,-1                # a0 = a - 1
                                        # set problem1 argument as a - 1
        call    problem1                # call problem1
        mv      s1,a0                   # save problem1(i-1)'s return value at s1
                                        # s1 = problem1(i-1)
        addi    a0,s0,-2                # set problem1 argument as a - 2
        call    problem1                # call problem1
        add     a0,s1,a0                # add return value of problem2(i-2) to s1
                                        # s1 += problem(i-2)
        ld      ra,24(sp)               # restore return address
        ld      s0,16(sp)               # restore s0
        ld      s1,8(sp)                # restore s1
        addi    sp,sp,32                # restore stack frame
        jr      ra                      # set up retrun address as 0
